
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R es un software libre y viene sin GARANTIA ALGUNA.
Usted puede redistribuirlo bajo ciertas circunstancias.
Escriba 'license()' o 'licence()' para detalles de distribucion.

R es un proyecto colaborativo con muchos contribuyentes.
Escriba 'contributors()' para obtener más información y
'citation()' para saber cómo citar R o paquetes de R en publicaciones.

Escriba 'demo()' para demostraciones, 'help()' para el sistema on-line de ayuda,
o 'help.start()' para abrir el sistema de ayuda HTML con su navegador.
Escriba 'q()' para salir de R.

[Previously saved workspace restored]

> #install.packages("nnet")
> library(nnet)
> #Esto funciona, lo que exige solamente es que el train tenga un class label, llamado Risk en la seccion de entrenamiento.
> #Hay que entrenar el modelo para luego testearlo. si es que el test se hara registro por registro, o todo un dataset, da lo mismo. 
> # el output del modelo es la probabilidad de ser valor 1. 
> # deje parametrizado el valor del threshold, para que se elija:
> # si se pone threshold 0, el output es el resultado de probabilidad, por registro.
> # si thres es cualquier valor mayor que 0, se pone valor 1 si es que el valor de probabilidad es mayor a ese threshold, y 0, en caso contrario.
> # luego el threshold lo decidimos nosotros. lo dejare parametrizado con threshold para la toma de decision
> #setwd("C:\\Users\\seba\\Dropbox\\Investigaciones")
> 
> RegLog <- function(trainSet,testSet, ID){
+   print(ID)
+   train<-read.csv2(trainSet)
+   test<-read.csv2(testSet)
+ #fts<-as.formula(Risk~Visual + Text + Bot) #esto es por si solo tenia 3 variables, pero podria tener mas
+ fts<-as.formula(Risk~.)
+ model<-multinom(fts, data=train,control = list(1e-8, 1000, FALSE))
+ risk<-predict(model,newdata=test,type='class')
+   write.table(risk, paste('regresion/',ID,'.txt'), append = FALSE, sep = " ", dec = "." )
+   #write.table(risk, 'regresion.txt', append = FALSE, sep = " ", dec = "." )
+   return(risk)
+   #write.table(risk, file = 'a.txt', append = FALSE, sep = ",", dec = "." )
+ 
+ }
> temp<-read.csv2('regresion/temp.csv', header=TRUE, sep=",")
> RegLog(levels(temp[['dataTrainSet_url']]),levels(temp[['dataTestSet_url']]),temp[['id']])
[1] 1
# weights:  55 (40 variable)
initial  value 1764.850921 
iter  10 value 1750.648474
iter  20 value 1748.787921
iter  30 value 1748.748028
final  value 1748.747900 
converged
[1] 3
Levels: 0 1 2 3 4 5 6 7 8 9 10
> # el url deberia ser otro
> 
> proc.time()
   user  system elapsed 
  0.206   0.050   0.268 
